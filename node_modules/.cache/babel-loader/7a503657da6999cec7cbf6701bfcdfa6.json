{"ast":null,"code":"import { hotels, badservices } from './reducers';\nimport createSagaMiddleware from '@redux-saga/core';\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport rootSaga from '../saga'; // import {fetch_hotels,fetch_services,create_vote} from '../actions/actions';\n// import {urls,testVote} from '../../helper/urls';\n\nconst reducer = combineReducers({\n  hotels,\n  badservices\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga); // store.dispatch(fetch_hotels(urls.hotels));\n// store.dispatch(fetch_services(urls.services));\n// store.dispatch(create_vote(urls.vote,testVote))\n\nexport default store;","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/reducers/store.js"],"names":["hotels","badservices","createSagaMiddleware","applyMiddleware","createStore","combineReducers","rootSaga","reducer","sagaMiddleware","store","run"],"mappings":"AAAA,SAAQA,MAAR,EAAeC,WAAf,QAAiC,YAAjC;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,SAAQC,eAAR,EAAwBC,WAAxB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,QAAP,MAAqB,SAArB,C,CACA;AACA;;AAEA,MAAMC,OAAO,GAAGF,eAAe,CAAC;AAACL,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAD,CAA/B;AACA,MAAMO,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,KAAK,GAAGL,WAAW,CAACG,OAAD,EAASJ,eAAe,CAACK,cAAD,CAAxB,CAAzB;AACAA,cAAc,CAACE,GAAf,CAAmBJ,QAAnB,E,CACA;AACA;AACA;;AAEA,eAAeG,KAAf","sourcesContent":["import {hotels,badservices} from './reducers';\nimport createSagaMiddleware from '@redux-saga/core'\nimport {applyMiddleware,createStore,combineReducers} from 'redux';\nimport rootSaga from '../saga'\n// import {fetch_hotels,fetch_services,create_vote} from '../actions/actions';\n// import {urls,testVote} from '../../helper/urls';\n\nconst reducer = combineReducers({hotels,badservices});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer,applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n// store.dispatch(fetch_hotels(urls.hotels));\n// store.dispatch(fetch_services(urls.services));\n// store.dispatch(create_vote(urls.vote,testVote))\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}