{"ast":null,"code":"import initialState from \"../../helper/initstate\";\nimport actionNames from \"../actions/actionTypes\";\n\nconst hotel = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      return {\n        id: state.id,\n        name: state.name,\n        stars: state.stars,\n        location: state.location,\n        services: state.services\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst service = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      return {\n        id: state.id,\n        name: state.name\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const hotels = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      const {\n        hotels\n      } = action;\n      return hotels.map(htel => hotel(htel, action));\n\n    default:\n      return state;\n  }\n};\nexport const badservices = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_SERVICES:\n      const {\n        services\n      } = action;\n      return services.map(serv => service(serv, action));\n\n    default:\n      return state;\n  }\n};\nexport const popup = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.POPUP:\n      const {\n        popup\n      } = action;\n      const {\n        initPop\n      } = state;\n      console.log(action);\n      return { ...initPop,\n        ...popup\n      };\n\n    default:\n      return state;\n  }\n};\nex;","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/reducers/reducers.js"],"names":["initialState","actionNames","hotel","state","action","type","SUCCESS_HOTELS","id","name","stars","location","services","service","hotels","map","htel","badservices","SUCCESS_SERVICES","serv","popup","POPUP","initPop","console","log","ex"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEC,MAAMC,KAAK,GAAG,YAAmB;AAAA,MAAlBC,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,cAAjB;AACI,aAAO;AACPC,QAAAA,EAAE,EAACJ,KAAK,CAACI,EADF;AAEPC,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAFL;AAGPC,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAHN;AAIPC,QAAAA,QAAQ,EAAEP,KAAK,CAACO,QAJT;AAKPC,QAAAA,QAAQ,EAACR,KAAK,CAACQ;AALR,OAAP;;AAOJ;AACI,aAAOR,KAAP;AAVR;AAYH,CAbA;;AAeD,MAAMS,OAAO,GAAG,YAAmB;AAAA,MAAlBT,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,cAAjB;AACI,aAAM;AACFC,QAAAA,EAAE,EAACJ,KAAK,CAACI,EADP;AAEFC,QAAAA,IAAI,EAACL,KAAK,CAACK;AAFT,OAAN;;AAIJ;AACI,aAAOL,KAAP;AAPR;AASH,CAVD;;AAaA,OAAO,MAAMU,MAAM,GAAG,YAAmB;AAAA,MAAlBV,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,cAAjB;AACI,YAAM;AAACO,QAAAA;AAAD,UAAST,MAAf;AACA,aAAOS,MAAM,CAACC,GAAP,CAAWC,IAAI,IAAEb,KAAK,CAACa,IAAD,EAAMX,MAAN,CAAtB,CAAP;;AACJ;AACI,aAAOD,KAAP;AALR;AAQH,CATM;AAWP,OAAO,MAAMa,WAAW,GAAG,YAAmB;AAAA,MAAlBb,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACgB,gBAAjB;AACI,YAAM;AAACN,QAAAA;AAAD,UAAaP,MAAnB;AACA,aAAOO,QAAQ,CAACG,GAAT,CAAaI,IAAI,IAAEN,OAAO,CAACM,IAAD,EAAMd,MAAN,CAA1B,CAAP;;AACJ;AACI,aAAOD,KAAP;AALR;AAQH,CATM;AAWP,OAAO,MAAMgB,KAAK,GAAG,YAA6B;AAAA,MAA5BhB,KAA4B,uEAAtBH,YAAsB;AAAA,MAATI,MAAS;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACmB,KAAjB;AACI,YAAM;AAACD,QAAAA;AAAD,UAASf,MAAf;AACA,YAAM;AAACiB,QAAAA;AAAD,UAAUlB,KAAhB;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACA,aAAO,EAAC,GAAGiB,OAAJ;AAAY,WAAGF;AAAf,OAAP;;AACJ;AACI,aAAOhB,KAAP;AAPR;AASH,CAVM;AAYPqB,EAAE","sourcesContent":["import initialState from \"../../helper/initstate\";\nimport actionNames from \"../actions/actionTypes\"\n\n const hotel = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            return {\n            id:state.id,\n            name: state.name,\n            stars: state.stars,\n            location: state.location,\n            services:state.services\n            }\n        default:\n            return state;\n    }\n}\n\nconst service = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            return{\n                id:state.id,\n                name:state.name\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const hotels = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            const {hotels}=action;\n            return hotels.map(htel=>hotel(htel,action));\n        default:\n            return state;\n    }\n\n}\n\nexport const badservices = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_SERVICES:\n            const {services} = action;\n            return services.map(serv=>service(serv,action));\n        default:\n            return state;\n    }\n\n}\n\nexport const popup = (state=initialState,action)=>{\n    switch (action.type) {\n        case actionNames.POPUP:\n            const {popup} =action;\n            const {initPop}=state\n            console.log(action)\n            return {...initPop,...popup}\n        default:\n            return state;\n    }\n}\n\nex\n"]},"metadata":{},"sourceType":"module"}