{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { success_auth, success_fetch_hotels, success_fetch_services } from './actions/actions';\nimport actionNames from './actions/actionTypes';\nimport { getData, createVote, authentication } from './sagaApi/apiCall';\n\nfunction* fetchHotels(action) {\n  const hotles = yield call(getData, action.url);\n  yield put(success_fetch_hotels(hotles));\n}\n\nfunction* fetchServices(action) {\n  const services = yield call(getData, action.url);\n  yield put(success_fetch_services(services));\n}\n\nfunction* authenticate(action) {\n  let authUser = localStorage.getItem(\"user\");\n  console.log(authUser);\n  const authData = yield call(authentication, action.url);\n  console.log(a);\n  localStorage.setItem(\"user\", JSON.stringify(user));\n  yield put(success_auth(user));\n}\n\nfunction* vote(action) {\n  yield call(createVote, action.url, action.vote);\n}\n\nfunction* watcher() {\n  yield takeEvery(actionNames.VOTE, vote);\n  yield takeEvery(actionNames.FETCH_HOTELS, fetchHotels);\n  yield takeEvery(actionNames.FETCH_SERVICES, fetchServices);\n  yield takeEvery(actionNames.AUTH, authenticate);\n}\n\nexport default watcher;","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/saga.js"],"names":["call","put","takeEvery","success_auth","success_fetch_hotels","success_fetch_services","actionNames","getData","createVote","authentication","fetchHotels","action","hotles","url","fetchServices","services","authenticate","authUser","localStorage","getItem","console","log","authData","a","setItem","JSON","stringify","user","vote","watcher","VOTE","FETCH_HOTELS","FETCH_SERVICES","AUTH"],"mappings":"AAAA,SAAQA,IAAR,EAAaC,GAAb,EAAiBC,SAAjB,QAAiC,oBAAjC;AACA,SAASC,YAAT,EAAuBC,oBAAvB,EAA6CC,sBAA7C,QAA2E,mBAA3E;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,OAAT,EAAiBC,UAAjB,EAA6BC,cAA7B,QAAmD,mBAAnD;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA6B;AACzB,QAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACO,OAAD,EAASI,MAAM,CAACE,GAAhB,CAAzB;AACA,QAAMZ,GAAG,CAACG,oBAAoB,CAACQ,MAAD,CAArB,CAAT;AACH;;AAED,UAAUE,aAAV,CAAwBH,MAAxB,EAA+B;AAC3B,QAAMI,QAAQ,GAAG,MAAMf,IAAI,CAACO,OAAD,EAASI,MAAM,CAACE,GAAhB,CAA3B;AACA,QAAMZ,GAAG,CAACI,sBAAsB,CAACU,QAAD,CAAvB,CAAT;AACH;;AAED,UAAUC,YAAV,CAAuBL,MAAvB,EAA8B;AAC1B,MAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,QAAMK,QAAQ,GAAC,MAAMtB,IAAI,CAACS,cAAD,EAAgBE,MAAM,CAACE,GAAvB,CAAzB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACAL,EAAAA,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA5B;AACA,QAAM1B,GAAG,CAACE,YAAY,CAACwB,IAAD,CAAb,CAAT;AAEH;;AAED,UAAUC,IAAV,CAAejB,MAAf,EAAsB;AAClB,QAAMX,IAAI,CAACQ,UAAD,EAAYG,MAAM,CAACE,GAAnB,EAAuBF,MAAM,CAACiB,IAA9B,CAAV;AACH;;AAGD,UAAUC,OAAV,GAAmB;AACf,QAAM3B,SAAS,CAACI,WAAW,CAACwB,IAAb,EAAkBF,IAAlB,CAAf;AACA,QAAM1B,SAAS,CAACI,WAAW,CAACyB,YAAb,EAA0BrB,WAA1B,CAAf;AACA,QAAMR,SAAS,CAACI,WAAW,CAAC0B,cAAb,EAA4BlB,aAA5B,CAAf;AACA,QAAMZ,SAAS,CAACI,WAAW,CAAC2B,IAAb,EAAkBjB,YAAlB,CAAf;AACH;;AAED,eAAea,OAAf","sourcesContent":["import {call,put,takeEvery} from 'redux-saga/effects'\nimport { success_auth, success_fetch_hotels, success_fetch_services } from './actions/actions';\nimport actionNames from './actions/actionTypes';\nimport { getData,createVote, authentication } from './sagaApi/apiCall'\n\nfunction* fetchHotels(action){\n    const hotles = yield call(getData,action.url);\n    yield put(success_fetch_hotels(hotles));\n}\n\nfunction* fetchServices(action){\n    const services = yield call(getData,action.url);\n    yield put(success_fetch_services(services))\n}\n\nfunction* authenticate(action){\n    let authUser = localStorage.getItem(\"user\");\n    console.log(authUser)\n    const authData=yield call(authentication,action.url);\n    console.log(a)\n    localStorage.setItem(\"user\",JSON.stringify(user))\n    yield put(success_auth(user))\n    \n}\n\nfunction* vote(action){\n    yield call(createVote,action.url,action.vote);\n}\n\n\nfunction* watcher(){\n    yield takeEvery(actionNames.VOTE,vote)\n    yield takeEvery(actionNames.FETCH_HOTELS,fetchHotels);\n    yield takeEvery(actionNames.FETCH_SERVICES,fetchServices);\n    yield takeEvery(actionNames.AUTH,authenticate);\n}\n\nexport default watcher;"]},"metadata":{},"sourceType":"module"}