{"ast":null,"code":"import actionNames from \"../actions/actionTypes\";\n\nconst hotel = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      return {\n        id: state.id,\n        name: state.name,\n        stars: state.stars,\n        location: state.location,\n        services: state.services\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const hotels = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      console.log(action);\n      return [].map(htel => hotel(htel, action));\n\n    case actionNames.S:\n      console.log(action);\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nconst service = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_SERVICES:\n      return {\n        id: state.id,\n        name: state.name\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const badServices = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case action.SUCCESS_SERVICES:\n      console.log(action);\n      return [].map(servc => service(state, servc));\n\n    default:\n      return state;\n  }\n};\n\nconst vote = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_VOTE:\n      return {\n        id: action.id,\n        hotelId: state.hotelId,\n        serviceId: state.serviceId,\n        votes: state.vote,\n        email: state.email,\n        createdAt: state.createdAt,\n        updatedAt: state.updatedAt,\n        service: state.service\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const votes = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_VOTE:\n      return state.map(rate => vote(action, rate));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/reducers/reducers.js"],"names":["actionNames","hotel","state","action","type","SUCCESS_HOTELS","id","name","stars","location","services","hotels","console","log","map","htel","S","service","SUCCESS_SERVICES","badServices","servc","vote","SUCCESS_VOTE","hotelId","serviceId","votes","email","createdAt","updatedAt","rate"],"mappings":"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","sourcesContent":["import actionNames from \"../actions/actionTypes\"\n\n const hotel = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            return {\n            id:state.id,\n            name: state.name,\n            stars: state.stars,\n            location: state.location,\n            services:state.services\n            }\n        default:\n            return state;\n    }\n}\n\nexport const hotels = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            console.log(action)\n            return [].map(htel=>hotel(htel,action));\n            case actionNames.S:\n                console.log(action)\n                return []\n        default:\n            return state;\n    }\n\n}\nconst service = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_SERVICES:\n            return{\n                id:state.id,\n                name:state.name\n            }\n        default:\n            return state;\n    }\n}\nexport const badServices = (state=[],action)=>{\n    switch (action.type) {\n        case action.SUCCESS_SERVICES:\n            console.log(action);\n            return [].map((servc)=>service(state,servc))\n        default:\n            return state;\n    }\n}\n\n const vote = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_VOTE:\n            return {\n                id:action.id,\n                hotelId: state.hotelId,\n                serviceId: state.serviceId,\n                votes: state.vote,\n                email: state.email,\n                createdAt: state.createdAt,\n                 updatedAt: state.updatedAt,\n                 service: state.service\n            }\n        default:\n            return state;\n    }\n}\n\nexport const votes = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_VOTE:\n            return state.map((rate)=>vote(action,rate))\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}