{"ast":null,"code":"import { hotels, badservices } from './reducers';\nimport createSagaMiddleware from '@redux-saga/core';\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport rootSaga from '../saga';\nimport { fetch_hotels, fetch_services, create_vote } from '../actions/actions';\nimport { urls, testVote } from '../../helper/urls';\nconst reducer = combineReducers({\n  hotels,\n  badservices\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nstore.dispatch(fetch_hotels(urls.hotels));\nstore.dispatch(fetch_services(urls.services));\nexport default store;","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/reducers/store.js"],"names":["hotels","badservices","createSagaMiddleware","applyMiddleware","createStore","combineReducers","rootSaga","fetch_hotels","fetch_services","create_vote","urls","testVote","reducer","sagaMiddleware","store","run","dispatch","services"],"mappings":"AAAA,SAAQA,MAAR,EAAeC,WAAf,QAAiC,YAAjC;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,SAAQC,eAAR,EAAwBC,WAAxB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAAQC,YAAR,EAAqBC,cAArB,EAAoCC,WAApC,QAAsD,oBAAtD;AACA,SAAQC,IAAR,EAAaC,QAAb,QAA4B,mBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAACL,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAD,CAA/B;AACA,MAAMY,cAAc,GAAGX,oBAAoB,EAA3C;AACA,MAAMY,KAAK,GAAGV,WAAW,CAACQ,OAAD,EAAST,eAAe,CAACU,cAAD,CAAxB,CAAzB;AACAA,cAAc,CAACE,GAAf,CAAmBT,QAAnB;AACAQ,KAAK,CAACE,QAAN,CAAeT,YAAY,CAACG,IAAI,CAACV,MAAN,CAA3B;AACAc,KAAK,CAACE,QAAN,CAAeR,cAAc,CAACE,IAAI,CAACO,QAAN,CAA7B;AAEA,eAAeH,KAAf","sourcesContent":["import {hotels,badservices} from './reducers';\nimport createSagaMiddleware from '@redux-saga/core'\nimport {applyMiddleware,createStore,combineReducers} from 'redux';\nimport rootSaga from '../saga'\nimport {fetch_hotels,fetch_services,create_vote} from '../actions/actions';\nimport {urls,testVote} from '../../helper/urls';\n\nconst reducer = combineReducers({hotels,badservices});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer,applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nstore.dispatch(fetch_hotels(urls.hotels));\nstore.dispatch(fetch_services(urls.services));\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}