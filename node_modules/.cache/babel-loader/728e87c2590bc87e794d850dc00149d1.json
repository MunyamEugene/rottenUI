{"ast":null,"code":"var _jsxFileName = \"/home/eugene/Desktop/rotten-ui/src/components/voteComponent/voteComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { closePop, selectServices } from \"../../helper/events\";\nimport './popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VoteComponent = _ref => {\n  _s();\n\n  let {\n    state,\n    closePopup\n  } = _ref;\n  const [checkedBoxes, setChecks] = useState();\n\n  const handleOnchecked = () => {\n    setCheck(!isChecked);\n    console.log(isChecked);\n  };\n\n  const {\n    popup,\n    badservices\n  } = state;\n  return popup ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bad-service-list\",\n        children: badservices.map(badservice => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bad-service\",\n            children: [badservice.name, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: handleOnchecked,\n              name: badservice.id,\n              onClick: selectServices(badservice, isChecked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 32\n            }, this)]\n          }, badservice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePop(closePopup),\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 20\n  }, this) : \"\";\n};\n\n_s(VoteComponent, \"nZkmyu9qaiZ8iVoGEZyiABFrsBA=\");\n\n_c = VoteComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteComponent\");","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/components/voteComponent/voteComponent.js"],"names":["React","useState","closePop","selectServices","VoteComponent","state","closePopup","checkedBoxes","setChecks","handleOnchecked","setCheck","isChecked","console","log","popup","badservices","map","badservice","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,qBAAzC;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAqB;AAC/C,QAAM,CAACC,YAAD,EAAcC,SAAd,IAAyBP,QAAQ,EAAvC;;AACA,QAAMQ,eAAe,GAAC,MAAI;AACtBC,IAAAA,QAAQ,CAAC,CAACC,SAAF,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,GAHD;;AAIA,QAAM;AAACG,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAsBV,KAA5B;AACA,SAAQS,KAAD,gBAAQ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACP;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACAC,WAAW,CAACC,GAAZ,CAAiBC,UAAD,IAAc;AAC3B,8BACI;AAAyB,YAAA,SAAS,EAAC,aAAnC;AAAA,uBAESA,UAAU,CAACC,IAFpB,eAGQ;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,QAAQ,EAAET,eAAjC;AAAkD,cAAA,IAAI,EAAEQ,UAAU,CAACE,EAAnE;AAAuE,cAAA,OAAO,EAAEhB,cAAc,CAACc,UAAD,EAAYN,SAAZ;AAA9F;AAAA;AAAA;AAAA;AAAA,oBAHR;AAAA,aAAUM,UAAU,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYF;AAAQ,QAAA,OAAO,EAAEjB,QAAQ,CAACI,UAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,UAAR,GAeI,EAfX;AAiBH,CAxBM;;GAAMF,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\nimport { closePop, selectServices } from \"../../helper/events\";\nimport './popup.css';\n\nexport const VoteComponent = ({state,closePopup})=>{\n    const [checkedBoxes,setChecks]=useState();\n    const handleOnchecked=()=>{\n        setCheck(!isChecked)\n        console.log(isChecked);\n    }\n    const {popup,badservices} = state;\n    return (popup)?<div className=\"popup\">\n            <div className=\"popup-content\">\n                <div className=\"bad-service-list\">\n               {badservices.map((badservice)=>{\n                   return(\n                       <div key={badservice.id} className=\"bad-service\">\n                           \n                               {badservice.name}\n                               <input type=\"checkbox\" onChange={handleOnchecked} name={badservice.id} onClick={selectServices(badservice,isChecked)}/>\n                       </div>\n                   );\n               })}\n               </div>\n          <button onClick={closePop(closePopup)}>save</button>\n            </div>\n        </div>:\"\"\n    \n}"]},"metadata":{},"sourceType":"module"}