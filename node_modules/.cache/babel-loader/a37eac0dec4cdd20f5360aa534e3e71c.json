{"ast":null,"code":"var _jsxFileName = \"/home/eugene/Desktop/rotten-ui/src/components/voteComponent/voteComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { urls } from \"../../helper/urls\";\nimport './popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VoteComponent = _ref => {\n  _s();\n\n  let {\n    state,\n    closePopup,\n    rateService,\n    canselRate,\n    saveRate,\n    fetchServices\n  } = _ref;\n  const {\n    popup,\n    badservices,\n    ratedService,\n    userReducer\n  } = state;\n  const {\n    email\n  } = userReducer;\n  const [checkedBoxes, setChecks] = useState([]);\n  useEffect(() => {\n    fetchServices();\n    setChecks(new Array(badservices.length).fill(false));\n  }, [badservices.length, fetchServices]);\n\n  const handleOnchecked = pos => {\n    const updateChecks = checkedBoxes.map((item, index) => index === pos ? !item : item);\n    setChecks(updateChecks);\n\n    if (!updateChecks[pos]) {\n      canselRate(badservices[pos]);\n    } else {\n      rateService(badservices[pos]);\n    }\n  };\n\n  const handleOnSaveRate = () => {\n    const hotel = localStorage.getItem(\"hotel\");\n    const rate = {\n      email: email,\n      hotel: JSON.parse(hotel),\n      badServices: [...ratedService]\n    };\n    saveRate(urls.vote, rate);\n    localStorage.removeItem(\"hotel\");\n    closePopup(false);\n  };\n\n  const handleOnCansel = () => {\n    localStorage.removeItem(\"hotel\");\n    closePopup(false);\n  };\n\n  return popup.popup ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bad-service-list\",\n        children: badservices.map((badservice, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bad-service\",\n            children: [badservice.name, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => handleOnchecked(index),\n              name: badservice.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 32\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ctrlbtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleOnCansel,\n          children: \"cansel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleOnSaveRate,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 26\n  }, this) : \"\";\n};\n\n_s(VoteComponent, \"dNLRE4qauOI+PB8e0nkA8yw2D1Y=\");\n\n_c = VoteComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteComponent\");","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/components/voteComponent/voteComponent.js"],"names":["React","useEffect","useState","urls","VoteComponent","state","closePopup","rateService","canselRate","saveRate","fetchServices","popup","badservices","ratedService","userReducer","email","checkedBoxes","setChecks","Array","length","fill","handleOnchecked","pos","updateChecks","map","item","index","handleOnSaveRate","hotel","localStorage","getItem","rate","JSON","parse","badServices","vote","removeItem","handleOnCansel","badservice","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { urls } from \"../../helper/urls\";\nimport './popup.css';\n\nexport const VoteComponent = ({state,closePopup,rateService,canselRate,saveRate,fetchServices})=>{\n    const {popup,badservices,ratedService,userReducer} = state;\n    const {email}=userReducer;\n    const [checkedBoxes,setChecks]=useState([]);\n    useEffect(()=>{\n        fetchServices()\n    setChecks(new Array(badservices.length).fill(false))\n    },[badservices.length,fetchServices]);\n\n        const handleOnchecked=(pos)=>{\n            const updateChecks=checkedBoxes.map((item,index)=>index===pos?!item:item)\n            setChecks(updateChecks)\n            if(!updateChecks[pos]){\n                canselRate(badservices[pos])\n            }else{\n                rateService(badservices[pos])\n    \n            }\n        }\n\n        const handleOnSaveRate =()=>{\n            const hotel = localStorage.getItem(\"hotel\");\n            const rate={\n                email:email,\n                hotel:JSON.parse(hotel),\n                badServices:[...ratedService]\n            }\n            saveRate(urls.vote,rate)\n            localStorage.removeItem(\"hotel\");\n            closePopup(false)\n        }\n\n        const handleOnCansel = ()=>{\n            localStorage.removeItem(\"hotel\");\n             closePopup(false)\n        }\n        \n    return (popup.popup)?<div className=\"popup\">\n            <div className=\"popup-content\">\n                <div className=\"bad-service-list\">\n               {badservices.map((badservice,index)=>{\n                   return(\n                       <div key={index} className=\"bad-service\">\n                           \n                               {badservice.name}\n                               <input type=\"checkbox\" onChange={()=>handleOnchecked(index)} name={badservice.id}/>\n                       </div>\n                   );\n               })}\n               \n               </div>\n               <div className=\"ctrlbtn\">\n                   <button className=\"btn\" onClick={handleOnCansel}>cansel</button>\n                   <button className=\"btn\" onClick={handleOnSaveRate}>save</button>\n               </div>\n            </div>\n        </div>:\"\"\n    \n}"]},"metadata":{},"sourceType":"module"}