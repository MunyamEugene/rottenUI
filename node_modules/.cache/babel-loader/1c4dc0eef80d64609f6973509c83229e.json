{"ast":null,"code":"import { connect } from 'react-redux';\nimport { popup, ratedService, canselVote, create_vote, fetch_services } from '../../redux/actions/actions';\nimport { VoteComponent } from './voteComponent';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  closePopup(falsvalue) {\n    dispatch(popup(falsvalue));\n  },\n\n  rateService(service) {\n    dispatch(ratedService(service));\n  },\n\n  canselRate(canseled) {\n    dispatch(canselVote(canseled));\n  },\n\n  saveRate(url, vote) {\n    dispatch(create_vote(url, vote));\n  },\n\n  fetchServices() {\n    dispatch(fetch_services);\n  }\n\n});\n\nexport const VoteContainer = connect(mapStateToProps, mapDispatchToProps)(VoteComponent);","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/components/voteComponent/voteContainer.js"],"names":["connect","popup","ratedService","canselVote","create_vote","fetch_services","VoteComponent","mapStateToProps","state","mapDispatchToProps","dispatch","closePopup","falsvalue","rateService","service","canselRate","canseled","saveRate","url","vote","fetchServices","VoteContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAeC,YAAf,EAA4BC,UAA5B,EAAuCC,WAAvC,EAAoDC,cAApD,QAA0E,6BAA1E;AACA,SAAQC,aAAR,QAA4B,iBAA5B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAU;AAC9BA,EAAAA;AAD8B,CAAV,CAAxB;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAI;AACnCC,EAAAA,UAAU,CAACC,SAAD,EAAW;AACjBF,IAAAA,QAAQ,CAACT,KAAK,CAACW,SAAD,CAAN,CAAR;AACH,GAHkC;;AAInCC,EAAAA,WAAW,CAACC,OAAD,EAAS;AAChBJ,IAAAA,QAAQ,CAACR,YAAY,CAACY,OAAD,CAAb,CAAR;AACH,GANkC;;AAOnCC,EAAAA,UAAU,CAACC,QAAD,EAAU;AAChBN,IAAAA,QAAQ,CAACP,UAAU,CAACa,QAAD,CAAX,CAAR;AACH,GATkC;;AAUnCC,EAAAA,QAAQ,CAACC,GAAD,EAAKC,IAAL,EAAU;AACdT,IAAAA,QAAQ,CAACN,WAAW,CAACc,GAAD,EAAKC,IAAL,CAAZ,CAAR;AACH,GAZkC;;AAanCC,EAAAA,aAAa,GAAE;AACXV,IAAAA,QAAQ,CAACL,cAAD,CAAR;AACH;;AAfkC,CAAJ,CAAnC;;AAkBA,OAAO,MAAMgB,aAAa,GAAGrB,OAAO,CAACO,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CH,aAA5C,CAAtB","sourcesContent":["import { connect } from 'react-redux';\nimport { popup,ratedService,canselVote,create_vote, fetch_services } from '../../redux/actions/actions';\nimport {VoteComponent} from './voteComponent';\n\nconst mapStateToProps = (state)=>({\n    state\n})\n\nconst mapDispatchToProps = dispatch =>({\n    closePopup(falsvalue){\n        dispatch(popup(falsvalue))\n    },\n    rateService(service){\n        dispatch(ratedService(service))\n    },\n    canselRate(canseled){\n        dispatch(canselVote(canseled))\n    },\n    saveRate(url,vote){\n        dispatch(create_vote(url,vote))\n    },\n    fetchServices(){\n        dispatch(fetch_services)\n    }\n})\n\nexport const VoteContainer = connect(mapStateToProps,mapDispatchToProps)(VoteComponent);"]},"metadata":{},"sourceType":"module"}