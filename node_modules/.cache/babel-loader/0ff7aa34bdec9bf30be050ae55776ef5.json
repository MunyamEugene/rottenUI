{"ast":null,"code":"import actionNames from \"./actionTypes\";\nexport const success_fetch_hotels = _ref => {\n  let {\n    hotels\n  } = _ref;\n  return {\n    type: actionNames.SUCCESS_HOTELS,\n    hotels: hotels\n  };\n};\nexport const success_fetch_services = _ref2 => {\n  let {\n    services\n  } = _ref2;\n  return {\n    type: actionNames.SUCCESS_SERVICES,\n    services: services\n  };\n};\nexport const success_vote = vote => ({\n  type: actionNames.SUCCESS_VOTE,\n  newVote: vote\n});\nexport const success_auth = authData => ({\n  type: actionNames.SUCCESS_AUTH,\n  user: authData\n});\nexport const success_logout = logout => ({\n  type: actionNames.SUCCESS_LOGOT,\n  logout\n}); //###########################\n//SAGA ACTIONS\n//###########################\n\nexport const fetch_hotels = url => ({\n  type: actionNames.FETCH_HOTELS,\n  url\n});\nexport const fetch_services = url => ({\n  type: actionNames.FETCH_SERVICES,\n  url\n});\nexport const fail = errors => ({\n  type: actionNames.FAIL,\n  errors\n});\nexport const create_vote = (url, vote) => ({\n  type: actionNames.VOTE,\n  url,\n  vote\n});\nexport const authenticate = url => ({\n  type: actionNames.AUTH,\n  url\n});\nexport const logoutUser = url => ({\n  type: actionNames.LOGOUT,\n  url\n}); //======================\n//rating actions\n//======================\n\nexport const popup = value => ({\n  type: actionNames.POPUP,\n  popup: {\n    popup: value\n  }\n});\nexport const ratedService = service => ({\n  type: actionNames.RATE,\n  service\n});\nexport const canselVote = canseled => ({\n  type: actionNames.CANSEL_VOTE,\n  canseled\n});","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/actions/actions.js"],"names":["actionNames","success_fetch_hotels","hotels","type","SUCCESS_HOTELS","success_fetch_services","services","SUCCESS_SERVICES","success_vote","vote","SUCCESS_VOTE","newVote","success_auth","authData","SUCCESS_AUTH","user","success_logout","logout","SUCCESS_LOGOT","fetch_hotels","url","FETCH_HOTELS","fetch_services","FETCH_SERVICES","fail","errors","FAIL","create_vote","VOTE","authenticate","AUTH","logoutUser","LOGOUT","popup","value","POPUP","ratedService","service","RATE","canselVote","canseled","CANSEL_VOTE"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,oBAAoB,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SAAa;AAC7CC,IAAAA,IAAI,EAACH,WAAW,CAACI,cAD4B;AAE7CF,IAAAA,MAAM,EAACA;AAFsC,GAAb;AAAA,CAA7B;AAKP,OAAO,MAAMG,sBAAsB,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SAAe;AACjDH,IAAAA,IAAI,EAACH,WAAW,CAACO,gBADgC;AAEjDD,IAAAA,QAAQ,EAACA;AAFwC,GAAf;AAAA,CAA/B;AAIP,OAAO,MAAME,YAAY,GAAGC,IAAD,KAAS;AAChCN,EAAAA,IAAI,EAACH,WAAW,CAACU,YADe;AAEhCC,EAAAA,OAAO,EAACF;AAFwB,CAAT,CAApB;AAIP,OAAO,MAAMG,YAAY,GAAEC,QAAD,KAAa;AACnCV,EAAAA,IAAI,EAACH,WAAW,CAACc,YADkB;AAEnCC,EAAAA,IAAI,EAACF;AAF8B,CAAb,CAAnB;AAKP,OAAO,MAAMG,cAAc,GAAEC,MAAD,KAAW;AACnCd,EAAAA,IAAI,EAACH,WAAW,CAACkB,aADkB;AAEnCD,EAAAA;AAFmC,CAAX,CAArB,C,CAKP;AACA;AACA;;AAEA,OAAO,MAAME,YAAY,GAAIC,GAAD,KAAQ;AACpCjB,EAAAA,IAAI,EAACH,WAAW,CAACqB,YADmB;AAEpCD,EAAAA;AAFoC,CAAR,CAArB;AAKP,OAAO,MAAME,cAAc,GAAIF,GAAD,KAAQ;AACtCjB,EAAAA,IAAI,EAACH,WAAW,CAACuB,cADqB;AAEtCH,EAAAA;AAFsC,CAAR,CAAvB;AAMP,OAAO,MAAMI,IAAI,GAAIC,MAAD,KAAW;AAC3BtB,EAAAA,IAAI,EAACH,WAAW,CAAC0B,IADU;AAE3BD,EAAAA;AAF2B,CAAX,CAAb;AAKP,OAAO,MAAME,WAAW,GAAG,CAACP,GAAD,EAAKX,IAAL,MAAa;AACpCN,EAAAA,IAAI,EAACH,WAAW,CAAC4B,IADmB;AAEpCR,EAAAA,GAFoC;AAGpCX,EAAAA;AAHoC,CAAb,CAApB;AAMP,OAAO,MAAMoB,YAAY,GAAIT,GAAD,KAAQ;AAChCjB,EAAAA,IAAI,EAACH,WAAW,CAAC8B,IADe;AAEhCV,EAAAA;AAFgC,CAAR,CAArB;AAKP,OAAO,MAAMW,UAAU,GAAIX,GAAD,KAAQ;AAC9BjB,EAAAA,IAAI,EAACH,WAAW,CAACgC,MADa;AAE9BZ,EAAAA;AAF8B,CAAR,CAAnB,C,CAIP;AACA;AACA;;AACA,OAAO,MAAMa,KAAK,GAAGC,KAAD,KAAU;AAC1B/B,EAAAA,IAAI,EAACH,WAAW,CAACmC,KADS;AAE1BF,EAAAA,KAAK,EAAC;AAACA,IAAAA,KAAK,EAACC;AAAP;AAFoB,CAAV,CAAb;AAKP,OAAO,MAAME,YAAY,GAAEC,OAAD,KAAY;AAClClC,EAAAA,IAAI,EAACH,WAAW,CAACsC,IADiB;AAElCD,EAAAA;AAFkC,CAAZ,CAAnB;AAKP,OAAO,MAAME,UAAU,GAAGC,QAAD,KAAa;AAClCrC,EAAAA,IAAI,EAACH,WAAW,CAACyC,WADiB;AAElCD,EAAAA;AAFkC,CAAb,CAAlB","sourcesContent":["import actionNames from \"./actionTypes\";\n\nexport const success_fetch_hotels = ({hotels})=>({\n    type:actionNames.SUCCESS_HOTELS,\n    hotels:hotels\n    });\n    \nexport const success_fetch_services = ({services})=>({\n    type:actionNames.SUCCESS_SERVICES,\n    services:services\n});\nexport const success_vote =(vote)=>({\n    type:actionNames.SUCCESS_VOTE,\n    newVote:vote\n});\nexport const success_auth=(authData)=>({\n    type:actionNames.SUCCESS_AUTH,\n    user:authData\n})\n\nexport const success_logout=(logout)=>({\n    type:actionNames.SUCCESS_LOGOT,\n    logout\n})\n\n//###########################\n//SAGA ACTIONS\n//###########################\n\nexport const fetch_hotels = (url)=>({\ntype:actionNames.FETCH_HOTELS,\nurl\n});\n\nexport const fetch_services = (url)=>({\ntype:actionNames.FETCH_SERVICES,\nurl\n});\n\n\nexport const fail = (errors)=>({\n    type:actionNames.FAIL,\n    errors\n});\n\nexport const create_vote = (url,vote)=>({\n    type:actionNames.VOTE,\n    url,\n    vote\n});\n\nexport const authenticate = (url)=>({\n    type:actionNames.AUTH,\n    url\n});\n\nexport const logoutUser = (url)=>({\n    type:actionNames.LOGOUT,\n    url\n});\n//======================\n//rating actions\n//======================\nexport const popup =(value)=>({\n    type:actionNames.POPUP,\n    popup:{popup:value}\n})\n\nexport const ratedService=(service)=>({\n    type:actionNames.RATE,\n    service\n})\n\nexport const canselVote =(canseled)=>({\n    type:actionNames.CANSEL_VOTE,\n    canseled\n})"]},"metadata":{},"sourceType":"module"}