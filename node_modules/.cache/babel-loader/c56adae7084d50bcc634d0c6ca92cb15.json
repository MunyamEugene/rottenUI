{"ast":null,"code":"import actionNames from \"../actions/actionTypes\";\n\nconst hotel = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      return {\n        id: state.id,\n        name: state.name,\n        stars: state.stars,\n        location: state.location,\n        services: state.services\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const hotelData = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      console.log(action);\n      return [].map(htel => hotel(htel, action));\n\n    default:\n      return state;\n  }\n}; // const service = (state={},action)=>{\n//     switch (action.type) {\n//         case actionNames.SUCCESS_HOTELS:\n//             return{\n//                 id:state.id,\n//                 name:state.name\n//             }\n//         default:\n//             return state;\n//     }\n// }\n\nexport const hotels2 = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      console.log(action);\n      return [].map(htel => hotel(htel, action));\n\n    default:\n      return state;\n  }\n};\n\nconst vote = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_VOTE:\n      return {\n        id: action.id,\n        hotelId: state.hotelId,\n        serviceId: state.serviceId,\n        votes: state.vote,\n        email: state.email,\n        createdAt: state.createdAt,\n        updatedAt: state.updatedAt,\n        service: state.service\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const votes = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_VOTE:\n      return state.map(rate => vote(action, rate));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/reducers/reducers.js"],"names":["actionNames","hotel","state","action","type","SUCCESS_HOTELS","id","name","stars","location","services","hotelData","console","log","map","htel","hotels2","vote","SUCCESS_VOTE","hotelId","serviceId","votes","email","createdAt","updatedAt","service","rate"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wBAAxB;;AAEC,MAAMC,KAAK,GAAG,YAAmB;AAAA,MAAlBC,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,cAAjB;AACI,aAAO;AACPC,QAAAA,EAAE,EAACJ,KAAK,CAACI,EADF;AAEPC,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAFL;AAGPC,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAHN;AAIPC,QAAAA,QAAQ,EAAEP,KAAK,CAACO,QAJT;AAKPC,QAAAA,QAAQ,EAACR,KAAK,CAACQ;AALR,OAAP;;AAOJ;AACI,aAAOR,KAAP;AAVR;AAYH,CAbA;;AAeD,OAAO,MAAMS,SAAS,GAAG,YAAmB;AAAA,MAAlBT,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,cAAjB;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,aAAO,GAAGW,GAAH,CAAOC,IAAI,IAAEd,KAAK,CAACc,IAAD,EAAMZ,MAAN,CAAlB,CAAP;;AACJ;AACI,aAAOD,KAAP;AALR;AAQH,CATM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMc,OAAO,GAAG,YAAmB;AAAA,MAAlBd,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,cAAjB;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,aAAO,GAAGW,GAAH,CAAOC,IAAI,IAAEd,KAAK,CAACc,IAAD,EAAMZ,MAAN,CAAlB,CAAP;;AACJ;AACI,aAAOD,KAAP;AALR;AAQH,CATM;;AAWN,MAAMe,IAAI,GAAG,YAAmB;AAAA,MAAlBf,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACkB,YAAjB;AACI,aAAO;AACHZ,QAAAA,EAAE,EAACH,MAAM,CAACG,EADP;AAEHa,QAAAA,OAAO,EAAEjB,KAAK,CAACiB,OAFZ;AAGHC,QAAAA,SAAS,EAAElB,KAAK,CAACkB,SAHd;AAIHC,QAAAA,KAAK,EAAEnB,KAAK,CAACe,IAJV;AAKHK,QAAAA,KAAK,EAAEpB,KAAK,CAACoB,KALV;AAMHC,QAAAA,SAAS,EAAErB,KAAK,CAACqB,SANd;AAOFC,QAAAA,SAAS,EAAEtB,KAAK,CAACsB,SAPf;AAQFC,QAAAA,OAAO,EAAEvB,KAAK,CAACuB;AARb,OAAP;;AAUJ;AACI,aAAOvB,KAAP;AAbR;AAeH,CAhBA;;AAkBD,OAAO,MAAMmB,KAAK,GAAG,YAAmB;AAAA,MAAlBnB,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACkB,YAAjB;AACI,aAAOhB,KAAK,CAACY,GAAN,CAAWY,IAAD,IAAQT,IAAI,CAACd,MAAD,EAAQuB,IAAR,CAAtB,CAAP;;AACJ;AACI,aAAOxB,KAAP;AAJR;AAMH,CAPM","sourcesContent":["import actionNames from \"../actions/actionTypes\"\n\n const hotel = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            return {\n            id:state.id,\n            name: state.name,\n            stars: state.stars,\n            location: state.location,\n            services:state.services\n            }\n        default:\n            return state;\n    }\n}\n\nexport const hotelData = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            console.log(action)\n            return [].map(htel=>hotel(htel,action));\n        default:\n            return state;\n    }\n\n}\n// const service = (state={},action)=>{\n//     switch (action.type) {\n//         case actionNames.SUCCESS_HOTELS:\n//             return{\n//                 id:state.id,\n//                 name:state.name\n//             }\n//         default:\n//             return state;\n//     }\n// }\nexport const hotels2 = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            console.log(action)\n            return [].map(htel=>hotel(htel,action));\n        default:\n            return state;\n    }\n\n}\n\n const vote = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_VOTE:\n            return {\n                id:action.id,\n                hotelId: state.hotelId,\n                serviceId: state.serviceId,\n                votes: state.vote,\n                email: state.email,\n                createdAt: state.createdAt,\n                 updatedAt: state.updatedAt,\n                 service: state.service\n            }\n        default:\n            return state;\n    }\n}\n\nexport const votes = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_VOTE:\n            return state.map((rate)=>vote(action,rate))\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}