{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { success_fetch_hotels, success_fetch_services, createVote } from './actions/actions';\nimport actionNames from './actions/actionTypes';\nimport { getData } from './sagaApi/apiCall';\n\nfunction* fetchHotels(action) {\n  const hotles = yield call(getData, action.url);\n  yield put(success_fetch_hotels(hotles));\n}\n\nfunction* fetchServices(action) {\n  const services = yield call(getData, action.url);\n  yield put(success_fetch_services(services));\n}\n\nfunction* vote(action) {\n  const newVote = yield call(createVote, action.newVote);\n  console.log(newVote);\n}\n\nfunction* watcher() {\n  yield takeEvery(actionNames.FETCH_HOTELS, fetchHotels);\n  yield takeEvery(actionNames.FETCH_SERVICES, fetchServices);\n}\n\nexport default watcher;","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/saga.js"],"names":["call","put","takeEvery","success_fetch_hotels","success_fetch_services","createVote","actionNames","getData","fetchHotels","action","hotles","url","fetchServices","services","vote","newVote","console","log","watcher","FETCH_HOTELS","FETCH_SERVICES"],"mappings":"AAAA,SAAQA,IAAR,EAAaC,GAAb,EAAiBC,SAAjB,QAAiC,oBAAjC;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,EAAsDC,UAAtD,QAAwE,mBAAxE;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA6B;AACzB,QAAMC,MAAM,GAAG,MAAMV,IAAI,CAACO,OAAD,EAASE,MAAM,CAACE,GAAhB,CAAzB;AACA,QAAMV,GAAG,CAACE,oBAAoB,CAACO,MAAD,CAArB,CAAT;AACH;;AAED,UAAUE,aAAV,CAAwBH,MAAxB,EAA+B;AAC3B,QAAMI,QAAQ,GAAG,MAAMb,IAAI,CAACO,OAAD,EAASE,MAAM,CAACE,GAAhB,CAA3B;AACA,QAAMV,GAAG,CAACG,sBAAsB,CAACS,QAAD,CAAvB,CAAT;AACH;;AAED,UAAUC,IAAV,CAAeL,MAAf,EAAsB;AAClB,QAAMM,OAAO,GAAG,MAAMf,IAAI,CAACK,UAAD,EAAYI,MAAM,CAACM,OAAnB,CAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH;;AAED,UAAUG,OAAV,GAAmB;AACf,QAAMhB,SAAS,CAACI,WAAW,CAACa,YAAb,EAA0BX,WAA1B,CAAf;AACA,QAAMN,SAAS,CAACI,WAAW,CAACc,cAAb,EAA4BR,aAA5B,CAAf;AACH;;AAED,eAAeM,OAAf","sourcesContent":["import {call,put,takeEvery} from 'redux-saga/effects'\nimport { success_fetch_hotels, success_fetch_services,createVote } from './actions/actions';\nimport actionNames from './actions/actionTypes';\nimport { getData } from './sagaApi/apiCall'\n\nfunction* fetchHotels(action){\n    const hotles = yield call(getData,action.url);\n    yield put(success_fetch_hotels(hotles));\n}\n\nfunction* fetchServices(action){\n    const services = yield call(getData,action.url);\n    yield put(success_fetch_services(services))\n}\n\nfunction* vote(action){\n    const newVote = yield call(createVote,action.newVote);\n    console.log(newVote);\n}\n\nfunction* watcher(){\n    yield takeEvery(actionNames.FETCH_HOTELS,fetchHotels)\n    yield takeEvery(actionNames.FETCH_SERVICES,fetchServices)\n}\n\nexport default watcher;"]},"metadata":{},"sourceType":"module"}