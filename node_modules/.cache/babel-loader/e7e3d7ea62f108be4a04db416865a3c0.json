{"ast":null,"code":"import actionNames from \"../actions/actionTypes\";\n\nconst hotel = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      return {\n        id: state.id,\n        name: state.name,\n        stars: state.stars,\n        location: state.location,\n        services: state.services\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst service = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      return {\n        id: state.id,\n        name: state.name\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const hotelData = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_HOTELS:\n      const {\n        hotels\n      } = action;\n      console.log(action);\n      return hotels.map(htel => hotel(htel, action));\n\n    case actionNames.SUCCESS_SERVICES:\n      const {\n        services\n      } = action;\n      const stt = {\n        hotels: { ...state\n        },\n        servics\n      };\n      return services.map(serv => service(serv, action));\n\n    default:\n      return state;\n  }\n};\n\nconst vote = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_VOTE:\n      return {\n        id: action.id,\n        hotelId: state.hotelId,\n        serviceId: state.serviceId,\n        votes: state.vote,\n        email: state.email,\n        createdAt: state.createdAt,\n        updatedAt: state.updatedAt,\n        service: state.service\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const votes = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionNames.SUCCESS_VOTE:\n      return state.map(rate => vote(action, rate));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eugene/Desktop/rotten-ui/src/redux/reducers/reducers.js"],"names":["actionNames","hotel","state","action","type","SUCCESS_HOTELS","id","name","stars","location","services","service","hotelData","hotels","console","log","map","htel","SUCCESS_SERVICES","stt","servics","serv","vote","SUCCESS_VOTE","hotelId","serviceId","votes","email","createdAt","updatedAt","rate"],"mappings":"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","sourcesContent":["import actionNames from \"../actions/actionTypes\"\n\n const hotel = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            return {\n            id:state.id,\n            name: state.name,\n            stars: state.stars,\n            location: state.location,\n            services:state.services\n            }\n        default:\n            return state;\n    }\n}\n\nconst service = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            return{\n                id:state.id,\n                name:state.name\n            }\n        default:\n            return state;\n    }\n}\n\nexport const hotelData = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_HOTELS:\n            const {hotels} = action;\n            console.log(action)\n            return hotels.map(htel=>hotel(htel,action));\n         case actionNames.SUCCESS_SERVICES:\n            const {services} = action;\n            const stt = {hotels:{...state},servics}\n            return services.map(serv=>service(serv,action));\n        default:\n            return state;\n    }\n\n}\n\n const vote = (state={},action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_VOTE:\n            return {\n                id:action.id,\n                hotelId: state.hotelId,\n                serviceId: state.serviceId,\n                votes: state.vote,\n                email: state.email,\n                createdAt: state.createdAt,\n                 updatedAt: state.updatedAt,\n                 service: state.service\n            }\n        default:\n            return state;\n    }\n}\n\nexport const votes = (state=[],action)=>{\n    switch (action.type) {\n        case actionNames.SUCCESS_VOTE:\n            return state.map((rate)=>vote(action,rate))\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}